--
Updated for MacOS X 10.6.8 by dbrashear (shadow@gmail.com)

All kudos to peter. All bugs to derrick.

You need an Intel Mac running 10.6, with the DevTools installed,
instead of an x86 Linux box.
--
Subject 
                           DIY cross-toolchain kit 

    Posted by
                        peter (enthusiast)
    Posted on
                        19/10/01 06:27 PM
    Attachment
                        41460-armtools.tar.gz



    You will need: 

    * An x86 PC running Linux, bash, gcc, GNU make 

    * The file attached to this message 

    * The following tarballs, available from FTP sites the world over:
	binutils-2.21.1.tar.gz (the original kit used 2.10.1)
	gcc-2.95.3.tar.gz
	glibc-2.1.3.tar.gz
	glibc-crypt-2.1.tar.gz
	glibc-linuxthreads-2.1.3.tar.gz
	linux-2.4.3.tar.gz 

    * 90Mb free disc space, plus another 250Mb for the compilation process 

    You should: 

    * Untar armtools.tar.gz to create the 'armtools' directory  (already done for you)

    * Stick all the tarballs you've collected in that directory 

    * Edit the PREFIX in the Makefile to dictate where your toolchain ends up (suggestions are in the file) 

    * Run make. This will build and install your toolchain (so you should run it as a user that can write to $PREFIX). It takes about one trillion
    cycles (20min on 1GHz). 

    You will then have an ARM Linux cross-compiler that's the same version as we use for V2.0 car player software. When cross-compiling, add
    $PREFIX/bin to your path. (Don't do it when you're not cross-compiling, in case you get the wrong cpp.) 

    Peter 
